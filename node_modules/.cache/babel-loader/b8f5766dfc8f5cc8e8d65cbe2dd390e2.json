{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usama\\\\Desktop\\\\TemplateDraft1\\\\src\\\\views\\\\dashboard\\\\Default\\\\TotalGrowthBarChart.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material'; // third-party\n\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts'; // project imports\n\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from 'ui-component/cards/MainCard'; // import { 3 } from 'store/constant';\n// chart data\n\nimport chartData from './chart-data/total-growth-bar-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst status = [{\n  value: 'today',\n  label: 'Today'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'year',\n  label: 'This Year'\n}]; // ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalGrowthBarChart = ({\n  isLoading\n}) => {\n  _s();\n\n  const [value, setValue] = useState('today');\n  const theme = useTheme(); // const customization = useSelector((state) => state.customization)\n  // const { navType } = customization\n\n  const {\n    primary\n  } = theme.palette.text;\n  const darkLight = theme.palette.dark.light;\n  const grey200 = theme.palette.grey[200];\n  const grey500 = theme.palette.grey[500];\n  const primary200 = '#90caf9';\n  const primaryDark = '#1e88e5';\n  const secondaryMain = '#673ab7';\n  const secondaryLight = '#ede7f6';\n  useEffect(() => {\n    const newChartData = { ...chartData.options,\n      colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [primary]\n          }\n        }\n      },\n      grid: {\n        borderColor: grey200\n      },\n      tooltip: {\n        theme: 'light'\n      },\n      legend: {\n        labels: {\n          colors: grey500\n        }\n      }\n    }; // do not load chart when loading\n\n    if (!isLoading) {\n      ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n    }\n  }, [// navType,\n  primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonTotalGrowthBarChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MainCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: \"Total Growth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h3\",\n                    children: \"$2,324.00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"standard-select-currency\",\n                select: true,\n                value: value,\n                onChange: e => setValue(e.target.value),\n                children: status.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Chart, { ...chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(TotalGrowthBarChart, \"ttOIex4sil4J1EOvRlvP8wugBZA=\", false, function () {\n  return [useTheme];\n});\n\n_c = TotalGrowthBarChart;\nTotalGrowthBarChart.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TotalGrowthBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalGrowthBarChart\");","map":{"version":3,"sources":["C:/Users/usama/Desktop/TemplateDraft1/src/views/dashboard/Default/TotalGrowthBarChart.js"],"names":["PropTypes","useState","useEffect","useSelector","useTheme","Grid","MenuItem","TextField","Typography","ApexCharts","Chart","SkeletonTotalGrowthBarChart","MainCard","chartData","status","value","label","TotalGrowthBarChart","isLoading","setValue","theme","primary","palette","text","darkLight","dark","light","grey200","grey","grey500","primary200","primaryDark","secondaryMain","secondaryLight","newChartData","options","colors","xaxis","labels","style","yaxis","grid","borderColor","tooltip","legend","exec","e","target","map","option","propTypes","bool"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAsD,eAAtD,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;;AACA,OAAOC,2BAAP,MAAwC,iDAAxC;AACA,OAAOC,QAAP,MAAqB,6BAArB,C,CACA;AAEA;;AACA,OAAOC,SAAP,MAAsB,qCAAtB;;;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADa,EAKb;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALa,EASb;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATa,CAAf,C,CAeA;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAC7C,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBlB,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAMmB,KAAK,GAAGhB,QAAQ,EAAtB,CAF6C,CAG7C;AAEA;;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAcD,KAAK,CAACE,OAAN,CAAcC,IAAlC;AACA,QAAMC,SAAS,GAAGJ,KAAK,CAACE,OAAN,CAAcG,IAAd,CAAmBC,KAArC;AACA,QAAMC,OAAO,GAAGP,KAAK,CAACE,OAAN,CAAcM,IAAd,CAAmB,GAAnB,CAAhB;AACA,QAAMC,OAAO,GAAGT,KAAK,CAACE,OAAN,CAAcM,IAAd,CAAmB,GAAnB,CAAhB;AAEA,QAAME,UAAU,GAAG,SAAnB;AACA,QAAMC,WAAW,GAAG,SAApB;AACA,QAAMC,aAAa,GAAG,SAAtB;AACA,QAAMC,cAAc,GAAG,SAAvB;AAEA/B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgC,YAAY,GAAG,EACnB,GAAGrB,SAAS,CAACsB,OADM;AAEnBC,MAAAA,MAAM,EAAE,CAACN,UAAD,EAAaC,WAAb,EAA0BC,aAA1B,EAAyCC,cAAzC,CAFW;AAGnBI,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AACLH,YAAAA,MAAM,EAAE,CACNf,OADM,EAENA,OAFM,EAGNA,OAHM,EAINA,OAJM,EAKNA,OALM,EAMNA,OANM,EAONA,OAPM,EAQNA,OARM,EASNA,OATM,EAUNA,OAVM,EAWNA,OAXM,EAYNA,OAZM;AADH;AADD;AADH,OAHY;AAuBnBmB,MAAAA,KAAK,EAAE;AACLF,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AACLH,YAAAA,MAAM,EAAE,CAACf,OAAD;AADH;AADD;AADH,OAvBY;AA8BnBoB,MAAAA,IAAI,EAAE;AACJC,QAAAA,WAAW,EAAEf;AADT,OA9Ba;AAiCnBgB,MAAAA,OAAO,EAAE;AACPvB,QAAAA,KAAK,EAAE;AADA,OAjCU;AAoCnBwB,MAAAA,MAAM,EAAE;AACNN,QAAAA,MAAM,EAAE;AACNF,UAAAA,MAAM,EAAEP;AADF;AADF;AApCW,KAArB,CADc,CA4Cd;;AACA,QAAI,CAACX,SAAL,EAAgB;AACdT,MAAAA,UAAU,CAACoC,IAAX,CAAiB,WAAjB,EAA6B,eAA7B,EAA8CX,YAA9C;AACD;AACF,GAhDQ,EAgDN,CACD;AACAJ,EAAAA,UAFC,EAGDC,WAHC,EAIDC,aAJC,EAKDC,cALC,EAMDZ,OANC,EAODG,SAPC,EAQDG,OARC,EASDT,SATC,EAUDW,OAVC,CAhDM,CAAT;AA6DA,sBACE;AAAA,cACGX,SAAS,gBACR,QAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,QAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,UAAU,EAAC,QAFb;AAGE,YAAA,cAAc,EAAC,eAHjB;AAAA,oCAKE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,SAAS,EAAC,QAA1B;AAAmC,gBAAA,OAAO,EAAE,CAA5C;AAAA,wCACE,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF,eAeE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,0BADL;AAEE,gBAAA,MAAM,MAFR;AAGE,gBAAA,KAAK,EAAEH,KAHT;AAIE,gBAAA,QAAQ,EAAG+B,CAAD,IAAO3B,QAAQ,CAAC2B,CAAC,CAACC,MAAF,CAAShC,KAAV,CAJ3B;AAAA,0BAMGD,MAAM,CAACkC,GAAP,CAAYC,MAAD,iBACV,QAAC,QAAD;AAA6B,kBAAA,KAAK,EAAEA,MAAM,CAAClC,KAA3C;AAAA,4BACGkC,MAAM,CAACjC;AADV,mBAAeiC,MAAM,CAAClC,KAAtB;AAAA;AAAA;AAAA;AAAA,wBADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAiCE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,KAAD,OAAWF;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AA+CD,CA5HD;;GAAMI,mB;UAEUb,Q;;;KAFVa,mB;AA8HNA,mBAAmB,CAACiC,SAApB,GAAgC;AAC9BhC,EAAAA,SAAS,EAAElB,SAAS,CAACmD;AADS,CAAhC;AAIA,eAAelC,mBAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\n// material-ui\nimport { useTheme } from '@mui/material/styles'\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material'\n\n// third-party\nimport ApexCharts from 'apexcharts'\nimport Chart from 'react-apexcharts'\n\n// project imports\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart'\nimport MainCard from 'ui-component/cards/MainCard'\n// import { 3 } from 'store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart'\n\nconst status = [\n  {\n    value: 'today',\n    label: 'Today',\n  },\n  {\n    value: 'month',\n    label: 'This Month',\n  },\n  {\n    value: 'year',\n    label: 'This Year',\n  },\n]\n\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalGrowthBarChart = ({ isLoading }) => {\n  const [value, setValue] = useState('today')\n  const theme = useTheme()\n  // const customization = useSelector((state) => state.customization)\n\n  // const { navType } = customization\n  const { primary } = theme.palette.text\n  const darkLight = theme.palette.dark.light\n  const grey200 = theme.palette.grey[200]\n  const grey500 = theme.palette.grey[500]\n\n  const primary200 = '#90caf9'\n  const primaryDark = '#1e88e5'\n  const secondaryMain = '#673ab7'\n  const secondaryLight = '#ede7f6'\n\n  useEffect(() => {\n    const newChartData = {\n      ...chartData.options,\n      colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [\n              primary,\n              primary,\n              primary,\n              primary,\n              primary,\n              primary,\n              primary,\n              primary,\n              primary,\n              primary,\n              primary,\n              primary,\n            ],\n          },\n        },\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [primary],\n          },\n        },\n      },\n      grid: {\n        borderColor: grey200,\n      },\n      tooltip: {\n        theme: 'light',\n      },\n      legend: {\n        labels: {\n          colors: grey500,\n        },\n      },\n    }\n\n    // do not load chart when loading\n    if (!isLoading) {\n      ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData)\n    }\n  }, [\n    // navType,\n    primary200,\n    primaryDark,\n    secondaryMain,\n    secondaryLight,\n    primary,\n    darkLight,\n    grey200,\n    isLoading,\n    grey500,\n  ])\n\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonTotalGrowthBarChart />\n      ) : (\n        <MainCard>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Grid\n                container\n                alignItems='center'\n                justifyContent='space-between'\n              >\n                <Grid item>\n                  <Grid container direction='column' spacing={1}>\n                    <Grid item>\n                      <Typography variant='subtitle2'>Total Growth</Typography>\n                    </Grid>\n                    <Grid item>\n                      <Typography variant='h3'>$2,324.00</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id='standard-select-currency'\n                    select\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                  >\n                    {status.map((option) => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Chart {...chartData} />\n            </Grid>\n          </Grid>\n        </MainCard>\n      )}\n    </>\n  )\n}\n\nTotalGrowthBarChart.propTypes = {\n  isLoading: PropTypes.bool,\n}\n\nexport default TotalGrowthBarChart\n"]},"metadata":{},"sourceType":"module"}