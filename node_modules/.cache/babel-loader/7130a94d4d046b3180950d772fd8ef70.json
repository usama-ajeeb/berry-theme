{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usama\\\\Desktop\\\\TemplateDraft1\\\\src\\\\ui-component\\\\extended\\\\Breadcrumbs.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Card, Divider, Grid, Typography } from '@mui/material';\nimport MuiBreadcrumbs from '@mui/material/Breadcrumbs'; // project imports\n\nimport config from 'config'; // import { 3 } from 'store/constant';\n// assets\n\nimport { IconTallymark1 } from '@tabler/icons';\nimport AccountTreeTwoToneIcon from '@mui/icons-material/AccountTreeTwoTone';\nimport HomeIcon from '@mui/icons-material/Home';\nimport HomeTwoToneIcon from '@mui/icons-material/HomeTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst linkSX = {\n  display: 'flex',\n  color: 'grey.900',\n  textDecoration: 'none',\n  alignContent: 'center',\n  alignItems: 'center'\n}; // ==============================|| BREADCRUMBS ||============================== //\n\nconst Breadcrumbs = ({\n  card,\n  divider,\n  icon,\n  icons,\n  maxItems,\n  navigation,\n  rightAlign,\n  separator,\n  title,\n  titleBottom,\n  ...others\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const iconStyle = {\n    marginRight: theme.spacing(0.75),\n    marginTop: `-${theme.spacing(0.25)}`,\n    width: '1rem',\n    height: '1rem',\n    color: '#673ab7'\n  };\n  const [main, setMain] = useState();\n  const [item, setItem] = useState(); // set active item state\n\n  const getCollapse = menu => {\n    if (menu.children) {\n      menu.children.filter(collapse => {\n        if (collapse.type && collapse.type === 'collapse') {\n          getCollapse(collapse);\n        } else if (collapse.type && collapse.type === 'item') {\n          if (document.location.pathname === config.basename + collapse.url) {\n            setMain(menu);\n            setItem(collapse);\n          }\n        }\n\n        return false;\n      });\n    }\n  };\n\n  useEffect(() => {\n    var _navigation$items;\n\n    navigation === null || navigation === void 0 ? void 0 : (_navigation$items = navigation.items) === null || _navigation$items === void 0 ? void 0 : _navigation$items.map(menu => {\n      if (menu.type && menu.type === 'group') {\n        getCollapse(menu);\n      }\n\n      return false;\n    });\n  }); // item separator\n\n  const SeparatorIcon = separator;\n  const separatorIcon = separator ? /*#__PURE__*/_jsxDEV(SeparatorIcon, {\n    stroke: 1.5,\n    size: \"1rem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(IconTallymark1, {\n    stroke: 1.5,\n    size: \"1rem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n  let mainContent;\n  let itemContent;\n\n  let breadcrumbContent = /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 27\n  }, this);\n\n  let itemTitle = '';\n  let CollapseIcon;\n  let ItemIcon; // collapse item\n\n  if (main && main.type === 'collapse') {\n    CollapseIcon = main.icon ? main.icon : AccountTreeTwoToneIcon;\n    mainContent = /*#__PURE__*/_jsxDEV(Typography, {\n      component: Link,\n      to: \"#\",\n      variant: \"subtitle1\",\n      sx: linkSX,\n      children: [icons && /*#__PURE__*/_jsxDEV(CollapseIcon, {\n        style: iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this), main.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  } // items\n\n\n  if (item && item.type === 'item') {\n    itemTitle = item.title;\n    ItemIcon = item.icon ? item.icon : AccountTreeTwoToneIcon;\n    itemContent = /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      sx: {\n        display: 'flex',\n        textDecoration: 'none',\n        alignContent: 'center',\n        alignItems: 'center',\n        color: 'grey.500'\n      },\n      children: [icons && /*#__PURE__*/_jsxDEV(ItemIcon, {\n        style: iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }, this), itemTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this); // main\n\n    if (item.breadcrumbs !== false) {\n      breadcrumbContent = /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          marginBottom: card === false ? 0 : theme.spacing(3),\n          border: card === false ? 'none' : '1px solid',\n          borderColor: '#90caf9' + 75,\n          background: card === false ? 'transparent' : theme.palette.background.default\n        },\n        ...others,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            pl: card === false ? 0 : 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: rightAlign ? 'row' : 'column',\n            justifyContent: rightAlign ? 'space-between' : 'flex-start',\n            alignItems: rightAlign ? 'center' : 'flex-start',\n            spacing: 1,\n            children: [title && !titleBottom && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                sx: {\n                  fontWeight: 500\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(MuiBreadcrumbs, {\n                sx: {\n                  '& .MuiBreadcrumbs-separator': {\n                    width: 16,\n                    ml: 1.25,\n                    mr: 1.25\n                  }\n                },\n                \"aria-label\": \"breadcrumb\",\n                maxItems: maxItems || 8,\n                separator: separatorIcon,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: Link,\n                  to: \"/\",\n                  color: \"inherit\",\n                  variant: \"subtitle1\",\n                  sx: linkSX,\n                  children: [icons && /*#__PURE__*/_jsxDEV(HomeTwoToneIcon, {\n                    sx: iconStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 31\n                  }, this), icon && /*#__PURE__*/_jsxDEV(HomeIcon, {\n                    sx: { ...iconStyle,\n                      mr: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 30\n                  }, this), !icon && 'Dashboard']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this), mainContent, itemContent]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), title && titleBottom && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                sx: {\n                  fontWeight: 500\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), card === false && divider !== false && /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            borderColor: '#2196f3',\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return breadcrumbContent;\n};\n\n_s(Breadcrumbs, \"zwxaixKc6m2zMxUMH3duzsxI8RU=\", false, function () {\n  return [useTheme];\n});\n\n_c = Breadcrumbs;\nBreadcrumbs.propTypes = {\n  card: PropTypes.bool,\n  divider: PropTypes.bool,\n  icon: PropTypes.bool,\n  icons: PropTypes.bool,\n  maxItems: PropTypes.number,\n  navigation: PropTypes.object,\n  rightAlign: PropTypes.bool,\n  separator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  title: PropTypes.bool,\n  titleBottom: PropTypes.bool\n};\nexport default Breadcrumbs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"sources":["C:/Users/usama/Desktop/TemplateDraft1/src/ui-component/extended/Breadcrumbs.js"],"names":["PropTypes","useEffect","useState","Link","useTheme","Box","Card","Divider","Grid","Typography","MuiBreadcrumbs","config","IconTallymark1","AccountTreeTwoToneIcon","HomeIcon","HomeTwoToneIcon","linkSX","display","color","textDecoration","alignContent","alignItems","Breadcrumbs","card","divider","icon","icons","maxItems","navigation","rightAlign","separator","title","titleBottom","others","theme","iconStyle","marginRight","spacing","marginTop","width","height","main","setMain","item","setItem","getCollapse","menu","children","filter","collapse","type","document","location","pathname","basename","url","items","map","SeparatorIcon","separatorIcon","mainContent","itemContent","breadcrumbContent","itemTitle","CollapseIcon","ItemIcon","breadcrumbs","marginBottom","border","borderColor","background","palette","default","p","pl","fontWeight","ml","mr","mb","propTypes","bool","number","object","oneOfType","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// material-ui\nimport { useTheme } from '@mui/material/styles'\nimport { Box, Card, Divider, Grid, Typography } from '@mui/material'\nimport MuiBreadcrumbs from '@mui/material/Breadcrumbs'\n\n// project imports\nimport config from 'config'\n// import { 3 } from 'store/constant';\n\n// assets\nimport { IconTallymark1 } from '@tabler/icons'\nimport AccountTreeTwoToneIcon from '@mui/icons-material/AccountTreeTwoTone'\nimport HomeIcon from '@mui/icons-material/Home'\nimport HomeTwoToneIcon from '@mui/icons-material/HomeTwoTone'\n\nconst linkSX = {\n  display: 'flex',\n  color: 'grey.900',\n  textDecoration: 'none',\n  alignContent: 'center',\n  alignItems: 'center',\n}\n\n// ==============================|| BREADCRUMBS ||============================== //\n\nconst Breadcrumbs = ({\n  card,\n  divider,\n  icon,\n  icons,\n  maxItems,\n  navigation,\n  rightAlign,\n  separator,\n  title,\n  titleBottom,\n  ...others\n}) => {\n  const theme = useTheme()\n\n  const iconStyle = {\n    marginRight: theme.spacing(0.75),\n    marginTop: `-${theme.spacing(0.25)}`,\n    width: '1rem',\n    height: '1rem',\n    color: '#673ab7',\n  }\n\n  const [main, setMain] = useState()\n  const [item, setItem] = useState()\n\n  // set active item state\n  const getCollapse = (menu) => {\n    if (menu.children) {\n      menu.children.filter((collapse) => {\n        if (collapse.type && collapse.type === 'collapse') {\n          getCollapse(collapse)\n        } else if (collapse.type && collapse.type === 'item') {\n          if (document.location.pathname === config.basename + collapse.url) {\n            setMain(menu)\n            setItem(collapse)\n          }\n        }\n        return false\n      })\n    }\n  }\n\n  useEffect(() => {\n    navigation?.items?.map((menu) => {\n      if (menu.type && menu.type === 'group') {\n        getCollapse(menu)\n      }\n      return false\n    })\n  })\n\n  // item separator\n  const SeparatorIcon = separator\n  const separatorIcon = separator ? (\n    <SeparatorIcon stroke={1.5} size='1rem' />\n  ) : (\n    <IconTallymark1 stroke={1.5} size='1rem' />\n  )\n\n  let mainContent\n  let itemContent\n  let breadcrumbContent = <Typography />\n  let itemTitle = ''\n  let CollapseIcon\n  let ItemIcon\n\n  // collapse item\n  if (main && main.type === 'collapse') {\n    CollapseIcon = main.icon ? main.icon : AccountTreeTwoToneIcon\n    mainContent = (\n      <Typography component={Link} to='#' variant='subtitle1' sx={linkSX}>\n        {icons && <CollapseIcon style={iconStyle} />}\n        {main.title}\n      </Typography>\n    )\n  }\n\n  // items\n  if (item && item.type === 'item') {\n    itemTitle = item.title\n\n    ItemIcon = item.icon ? item.icon : AccountTreeTwoToneIcon\n    itemContent = (\n      <Typography\n        variant='subtitle1'\n        sx={{\n          display: 'flex',\n          textDecoration: 'none',\n          alignContent: 'center',\n          alignItems: 'center',\n          color: 'grey.500',\n        }}\n      >\n        {icons && <ItemIcon style={iconStyle} />}\n        {itemTitle}\n      </Typography>\n    )\n\n    // main\n    if (item.breadcrumbs !== false) {\n      breadcrumbContent = (\n        <Card\n          sx={{\n            marginBottom: card === false ? 0 : theme.spacing(3),\n            border: card === false ? 'none' : '1px solid',\n            borderColor: '#90caf9' + 75,\n            background:\n              card === false ? 'transparent' : theme.palette.background.default,\n          }}\n          {...others}\n        >\n          <Box sx={{ p: 2, pl: card === false ? 0 : 2 }}>\n            <Grid\n              container\n              direction={rightAlign ? 'row' : 'column'}\n              justifyContent={rightAlign ? 'space-between' : 'flex-start'}\n              alignItems={rightAlign ? 'center' : 'flex-start'}\n              spacing={1}\n            >\n              {title && !titleBottom && (\n                <Grid item>\n                  <Typography variant='h3' sx={{ fontWeight: 500 }}>\n                    {item.title}\n                  </Typography>\n                </Grid>\n              )}\n              <Grid item>\n                <MuiBreadcrumbs\n                  sx={{\n                    '& .MuiBreadcrumbs-separator': {\n                      width: 16,\n                      ml: 1.25,\n                      mr: 1.25,\n                    },\n                  }}\n                  aria-label='breadcrumb'\n                  maxItems={maxItems || 8}\n                  separator={separatorIcon}\n                >\n                  <Typography\n                    component={Link}\n                    to='/'\n                    color='inherit'\n                    variant='subtitle1'\n                    sx={linkSX}\n                  >\n                    {icons && <HomeTwoToneIcon sx={iconStyle} />}\n                    {icon && <HomeIcon sx={{ ...iconStyle, mr: 0 }} />}\n                    {!icon && 'Dashboard'}\n                  </Typography>\n                  {mainContent}\n                  {itemContent}\n                </MuiBreadcrumbs>\n              </Grid>\n              {title && titleBottom && (\n                <Grid item>\n                  <Typography variant='h3' sx={{ fontWeight: 500 }}>\n                    {item.title}\n                  </Typography>\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n          {card === false && divider !== false && (\n            <Divider sx={{ borderColor: '#2196f3', mb: 3 }} />\n          )}\n        </Card>\n      )\n    }\n  }\n\n  return breadcrumbContent\n}\n\nBreadcrumbs.propTypes = {\n  card: PropTypes.bool,\n  divider: PropTypes.bool,\n  icon: PropTypes.bool,\n  icons: PropTypes.bool,\n  maxItems: PropTypes.number,\n  navigation: PropTypes.object,\n  rightAlign: PropTypes.bool,\n  separator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  title: PropTypes.bool,\n  titleBottom: PropTypes.bool,\n}\n\nexport default Breadcrumbs\n"]},"metadata":{},"sourceType":"module"}