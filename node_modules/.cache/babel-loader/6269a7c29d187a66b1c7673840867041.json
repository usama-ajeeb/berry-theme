{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usama\\\\Desktop\\\\TemplateDraft1\\\\src\\\\layout\\\\MainLayout\\\\Header\\\\NotificationSection\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Button, ButtonBase, CardActions, Chip, ClickAwayListener, Divider, Grid, Paper, Popper, Stack, TextField, Typography, useMediaQuery } from '@mui/material'; // third-party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport Transitions from 'ui-component/extended/Transitions';\nimport NotificationList from './NotificationList'; // assets\n\nimport { IconBell } from '@tabler/icons'; // notification status options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst status = [{\n  value: 'all',\n  label: 'All Notification'\n}, {\n  value: 'new',\n  label: 'New'\n}, {\n  value: 'unread',\n  label: 'Unread'\n}, {\n  value: 'other',\n  label: 'Other'\n}]; // ==============================|| NOTIFICATION ||============================== //\n\nconst NotificationSection = () => {\n  _s();\n\n  const theme = useTheme();\n  const matchesXs = useMediaQuery(theme.breakpoints.down('md'));\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  /**\n   * anchorRef is used on different componets and specifying one type leads to other components throwing an error\n   * */\n\n  const anchorRef = useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const prevOpen = useRef(open);\n  useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  const handleChange = event => {\n    if (event === null || event === void 0 ? void 0 : event.target.value) setValue(event === null || event === void 0 ? void 0 : event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        ml: 2,\n        mr: 3,\n        [theme.breakpoints.down('md')]: {\n          mr: 2\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n        sx: {\n          borderRadius: '12px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\",\n          sx: { ...theme.typography.commonAvatar,\n            ...theme.typography.mediumAvatar,\n            transition: 'all .2s ease-in-out',\n            background: theme.palette.secondary.light,\n            color: '#5e35b1',\n            '&[aria-controls=\"menu-list-grow\"],&:hover': {\n              background: '#5e35b1',\n              color: theme.palette.secondary.light\n            }\n          },\n          ref: anchorRef,\n          \"aria-controls\": open ? 'menu-list-grow' : undefined,\n          \"aria-haspopup\": \"true\",\n          onClick: handleToggle,\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(IconBell, {\n            stroke: 1.5,\n            size: \"1.3rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      placement: matchesXs ? 'bottom' : 'bottom-end',\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      popperOptions: {\n        modifiers: [{\n          name: 'offset',\n          options: {\n            offset: [matchesXs ? 5 : 0, 20]\n          }\n        }]\n      },\n      children: ({\n        TransitionProps\n      }) => /*#__PURE__*/_jsxDEV(Transitions, {\n        position: matchesXs ? 'top' : 'top-right',\n        in: open,\n        ...TransitionProps,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n            onClickAway: handleClose,\n            children: /*#__PURE__*/_jsxDEV(MainCard, {\n              border: false,\n              elevation: 16,\n              content: false,\n              boxShadow: true,\n              shadow: theme.shadows[16],\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    sx: {\n                      pt: 2,\n                      px: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Stack, {\n                        direction: \"row\",\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle1\",\n                          children: \"All Notification\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                          size: \"small\",\n                          label: \"01\",\n                          sx: {\n                            color: theme.palette.background.default,\n                            bgcolor: theme.palette.warning.dark\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: Link,\n                        to: \"#\",\n                        variant: \"subtitle2\",\n                        color: \"primary\",\n                        children: \"Mark as all read\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n                    style: {\n                      height: '100%',\n                      maxHeight: 'calc(100vh - 205px)',\n                      overflowX: 'hidden'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      direction: \"column\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            px: 2,\n                            pt: 0.25\n                          },\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            id: \"outlined-select-currency-native\",\n                            select: true,\n                            fullWidth: true,\n                            value: value,\n                            onChange: handleChange,\n                            SelectProps: {\n                              native: true\n                            },\n                            children: status.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: option.value,\n                              children: option.label\n                            }, option.value, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 216,\n                              columnNumber: 35\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 205,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        p: 0,\n                        children: /*#__PURE__*/_jsxDEV(Divider, {\n                          sx: {\n                            my: 0\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 227,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(NotificationList, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                sx: {\n                  p: 1.25,\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  disableElevation: true,\n                  children: \"View All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotificationSection, \"Ao+S7zMlZJ+ClW22hKVKIj6OZAY=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = NotificationSection;\nexport default NotificationSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationSection\");","map":{"version":3,"sources":["C:/Users/usama/Desktop/TemplateDraft1/src/layout/MainLayout/Header/NotificationSection/index.js"],"names":["useState","useRef","useEffect","Link","useTheme","Avatar","Box","Button","ButtonBase","CardActions","Chip","ClickAwayListener","Divider","Grid","Paper","Popper","Stack","TextField","Typography","useMediaQuery","PerfectScrollbar","MainCard","Transitions","NotificationList","IconBell","status","value","label","NotificationSection","theme","matchesXs","breakpoints","down","open","setOpen","setValue","anchorRef","handleToggle","prevOpen","handleClose","event","current","contains","target","focus","handleChange","ml","mr","borderRadius","typography","commonAvatar","mediumAvatar","transition","background","palette","secondary","light","color","undefined","modifiers","name","options","offset","TransitionProps","shadows","pt","px","default","bgcolor","warning","dark","height","maxHeight","overflowX","native","map","option","my","p","justifyContent"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// material-ui\nimport { useTheme } from '@mui/material/styles'\nimport {\n  Avatar,\n  Box,\n  Button,\n  ButtonBase,\n  CardActions,\n  Chip,\n  ClickAwayListener,\n  Divider,\n  Grid,\n  Paper,\n  Popper,\n  Stack,\n  TextField,\n  Typography,\n  useMediaQuery,\n} from '@mui/material'\n\n// third-party\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard'\nimport Transitions from 'ui-component/extended/Transitions'\nimport NotificationList from './NotificationList'\n\n// assets\nimport { IconBell } from '@tabler/icons'\n\n// notification status options\nconst status = [\n  {\n    value: 'all',\n    label: 'All Notification',\n  },\n  {\n    value: 'new',\n    label: 'New',\n  },\n  {\n    value: 'unread',\n    label: 'Unread',\n  },\n  {\n    value: 'other',\n    label: 'Other',\n  },\n]\n\n// ==============================|| NOTIFICATION ||============================== //\n\nconst NotificationSection = () => {\n  const theme = useTheme()\n  const matchesXs = useMediaQuery(theme.breakpoints.down('md'))\n\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState('')\n  /**\n   * anchorRef is used on different componets and specifying one type leads to other components throwing an error\n   * */\n  const anchorRef = useRef(null)\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen)\n  }\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return\n    }\n    setOpen(false)\n  }\n\n  const prevOpen = useRef(open)\n  useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus()\n    }\n    prevOpen.current = open\n  }, [open])\n\n  const handleChange = (event) => {\n    if (event?.target.value) setValue(event?.target.value)\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          ml: 2,\n          mr: 3,\n          [theme.breakpoints.down('md')]: {\n            mr: 2,\n          },\n        }}\n      >\n        <ButtonBase sx={{ borderRadius: '12px' }}>\n          <Avatar\n            variant='rounded'\n            sx={{\n              ...theme.typography.commonAvatar,\n              ...theme.typography.mediumAvatar,\n              transition: 'all .2s ease-in-out',\n              background: theme.palette.secondary.light,\n              color: '#5e35b1',\n              '&[aria-controls=\"menu-list-grow\"],&:hover': {\n                background: '#5e35b1',\n                color: theme.palette.secondary.light,\n              },\n            }}\n            ref={anchorRef}\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup='true'\n            onClick={handleToggle}\n            color='inherit'\n          >\n            <IconBell stroke={1.5} size='1.3rem' />\n          </Avatar>\n        </ButtonBase>\n      </Box>\n      <Popper\n        placement={matchesXs ? 'bottom' : 'bottom-end'}\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        popperOptions={{\n          modifiers: [\n            {\n              name: 'offset',\n              options: {\n                offset: [matchesXs ? 5 : 0, 20],\n              },\n            },\n          ],\n        }}\n      >\n        {({ TransitionProps }) => (\n          <Transitions\n            position={matchesXs ? 'top' : 'top-right'}\n            in={open}\n            {...TransitionProps}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MainCard\n                  border={false}\n                  elevation={16}\n                  content={false}\n                  boxShadow\n                  shadow={theme.shadows[16]}\n                >\n                  <Grid container direction='column' spacing={2}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        alignItems='center'\n                        justifyContent='space-between'\n                        sx={{ pt: 2, px: 2 }}\n                      >\n                        <Grid item>\n                          <Stack direction='row' spacing={2}>\n                            <Typography variant='subtitle1'>\n                              All Notification\n                            </Typography>\n                            <Chip\n                              size='small'\n                              label='01'\n                              sx={{\n                                color: theme.palette.background.default,\n                                bgcolor: theme.palette.warning.dark,\n                              }}\n                            />\n                          </Stack>\n                        </Grid>\n                        <Grid item>\n                          <Typography\n                            component={Link}\n                            to='#'\n                            variant='subtitle2'\n                            color='primary'\n                          >\n                            Mark as all read\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <PerfectScrollbar\n                        style={{\n                          height: '100%',\n                          maxHeight: 'calc(100vh - 205px)',\n                          overflowX: 'hidden',\n                        }}\n                      >\n                        <Grid container direction='column' spacing={2}>\n                          <Grid item xs={12}>\n                            <Box sx={{ px: 2, pt: 0.25 }}>\n                              <TextField\n                                id='outlined-select-currency-native'\n                                select\n                                fullWidth\n                                value={value}\n                                onChange={handleChange}\n                                SelectProps={{\n                                  native: true,\n                                }}\n                              >\n                                {status.map((option) => (\n                                  <option\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </option>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Grid>\n                          <Grid item xs={12} p={0}>\n                            <Divider sx={{ my: 0 }} />\n                          </Grid>\n                        </Grid>\n                        <NotificationList />\n                      </PerfectScrollbar>\n                    </Grid>\n                  </Grid>\n                  <Divider />\n                  <CardActions sx={{ p: 1.25, justifyContent: 'center' }}>\n                    <Button size='small' disableElevation>\n                      View All\n                    </Button>\n                  </CardActions>\n                </MainCard>\n              </ClickAwayListener>\n            </Paper>\n          </Transitions>\n        )}\n      </Popper>\n    </>\n  )\n}\n\nexport default NotificationSection\n"]},"metadata":{},"sourceType":"module"}