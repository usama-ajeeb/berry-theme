{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usama\\\\Desktop\\\\TemplateDraft1\\\\src\\\\views\\\\dashboard\\\\Default\\\\TotalOrderLineChartCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material'; // third-party\n\nimport Chart from 'react-apexcharts'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart'; // assets\n\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(({\n  theme\n}) => ({\n  backgroundColor: '#1e88e5',\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  '&>div': {\n    position: 'relative',\n    zIndex: 5\n  },\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: '#1565c0',\n    borderRadius: '50%',\n    zIndex: 1,\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140\n    }\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    zIndex: 1,\n    width: 210,\n    height: 210,\n    background: '#1565c0',\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70\n    }\n  }\n})); // ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst TotalOrderLineChartCard = ({\n  isLoading\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const [timeValue, setTimeValue] = useState(false);\n\n  const handleChangeTime = (event, newValue) => {\n    setTimeValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonTotalOrderCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2.25\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  variant: \"rounded\",\n                  sx: {\n                    cursor: 'pointer',\n                    borderRadius: '8px',\n                    ...theme.typography.largeAvatar,\n                    backgroundColor: '#1565c0',\n                    color: '#fff',\n                    mt: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(LocalMallOutlinedIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  variant: timeValue ? 'contained' : 'text',\n                  size: \"small\",\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: e => handleChangeTime(e, true),\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  variant: !timeValue ? 'contained' : 'text',\n                  size: \"small\",\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: e => handleChangeTime(e, false),\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              mb: 0.75\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: timeValue ? /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '2.125rem',\n                        fontWeight: 500,\n                        mr: 1,\n                        mt: 1.75,\n                        mb: 0.75\n                      },\n                      children: \"$108\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '2.125rem',\n                        fontWeight: 500,\n                        mr: 1,\n                        mt: 1.75,\n                        mb: 0.75\n                      },\n                      children: \"$961\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      sx: {\n                        width: '22px',\n                        height: '22px',\n                        fontSize: '1rem',\n                        cursor: 'pointer',\n                        backgroundColor: '#90caf9',\n                        color: '#1e88e5'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n                        fontSize: \"inherit\",\n                        sx: {\n                          transform: 'rotate3d(1, 1, 1, 45deg)'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '1rem',\n                        fontWeight: 500,\n                        color: '#90caf9'\n                      },\n                      children: \"Total Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: timeValue ? /*#__PURE__*/_jsxDEV(Chart, { ...ChartDataMonth\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Chart, { ...ChartDataYear\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(TotalOrderLineChartCard, \"f37AJ0amxSneRDYyPE3LDMkkg/g=\", false, function () {\n  return [useTheme];\n});\n\n_c = TotalOrderLineChartCard;\nTotalOrderLineChartCard.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TotalOrderLineChartCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalOrderLineChartCard\");","map":{"version":3,"sources":["C:/Users/usama/Desktop/TemplateDraft1/src/views/dashboard/Default/TotalOrderLineChartCard.js"],"names":["PropTypes","useState","useTheme","styled","Avatar","Box","Button","Grid","Typography","Chart","MainCard","SkeletonTotalOrderCard","ChartDataMonth","ChartDataYear","LocalMallOutlinedIcon","ArrowDownwardIcon","CardWrapper","theme","backgroundColor","color","overflow","position","zIndex","content","width","height","background","borderRadius","top","right","breakpoints","down","opacity","TotalOrderLineChartCard","isLoading","timeValue","setTimeValue","handleChangeTime","event","newValue","p","cursor","typography","largeAvatar","mt","e","mb","fontSize","fontWeight","mr","transform","propTypes","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport { useState } from 'react'\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles'\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material'\n\n// third-party\nimport Chart from 'react-apexcharts'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard'\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard'\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart'\nimport ChartDataYear from './chart-data/total-order-year-line-chart'\n\n// assets\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n  backgroundColor: '#1e88e5',\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  '&>div': {\n    position: 'relative',\n    zIndex: 5,\n  },\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: '#1565c0',\n    borderRadius: '50%',\n    zIndex: 1,\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140,\n    },\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    zIndex: 1,\n    width: 210,\n    height: 210,\n    background: '#1565c0',\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70,\n    },\n  },\n}))\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst TotalOrderLineChartCard = ({ isLoading }) => {\n  const theme = useTheme()\n\n  const [timeValue, setTimeValue] = useState(false)\n  const handleChangeTime = (event, newValue) => {\n    setTimeValue(newValue)\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonTotalOrderCard />\n      ) : (\n        <CardWrapper border={false} content={false}>\n          <Box sx={{ p: 2.25 }}>\n            <Grid container direction='column'>\n              <Grid item>\n                <Grid container justifyContent='space-between'>\n                  <Grid item>\n                    <Avatar\n                      variant='rounded'\n                      sx={{\n                        cursor: 'pointer',\n                        borderRadius: '8px',\n                        ...theme.typography.largeAvatar,\n                        backgroundColor: '#1565c0',\n                        color: '#fff',\n                        mt: 1,\n                      }}\n                    >\n                      <LocalMallOutlinedIcon fontSize='inherit' />\n                    </Avatar>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      disableElevation\n                      variant={timeValue ? 'contained' : 'text'}\n                      size='small'\n                      sx={{ color: 'inherit' }}\n                      onClick={(e) => handleChangeTime(e, true)}\n                    >\n                      Month\n                    </Button>\n                    <Button\n                      disableElevation\n                      variant={!timeValue ? 'contained' : 'text'}\n                      size='small'\n                      sx={{ color: 'inherit' }}\n                      onClick={(e) => handleChangeTime(e, false)}\n                    >\n                      Year\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item sx={{ mb: 0.75 }}>\n                <Grid container alignItems='center'>\n                  <Grid item xs={6}>\n                    <Grid container alignItems='center'>\n                      <Grid item>\n                        {timeValue ? (\n                          <Typography\n                            sx={{\n                              fontSize: '2.125rem',\n                              fontWeight: 500,\n                              mr: 1,\n                              mt: 1.75,\n                              mb: 0.75,\n                            }}\n                          >\n                            $108\n                          </Typography>\n                        ) : (\n                          <Typography\n                            sx={{\n                              fontSize: '2.125rem',\n                              fontWeight: 500,\n                              mr: 1,\n                              mt: 1.75,\n                              mb: 0.75,\n                            }}\n                          >\n                            $961\n                          </Typography>\n                        )}\n                      </Grid>\n                      <Grid item>\n                        <Avatar\n                          sx={{\n                            width: '22px',\n                            height: '22px',\n                            fontSize: '1rem',\n                            cursor: 'pointer',\n                            backgroundColor: '#90caf9',\n                            color: '#1e88e5',\n                          }}\n                        >\n                          <ArrowDownwardIcon\n                            fontSize='inherit'\n                            sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }}\n                          />\n                        </Avatar>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography\n                          sx={{\n                            fontSize: '1rem',\n                            fontWeight: 500,\n                            color: '#90caf9',\n                          }}\n                        >\n                          Total Order\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={6}>\n                    {timeValue ? (\n                      <Chart {...ChartDataMonth} />\n                    ) : (\n                      <Chart {...ChartDataYear} />\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        </CardWrapper>\n      )}\n    </>\n  )\n}\n\nTotalOrderLineChartCard.propTypes = {\n  isLoading: PropTypes.bool,\n}\n\nexport default TotalOrderLineChartCard\n"]},"metadata":{},"sourceType":"module"}