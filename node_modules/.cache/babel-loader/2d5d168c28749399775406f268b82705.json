{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usama\\\\Desktop\\\\TemplateDraft1\\\\src\\\\views\\\\pages\\\\authentication\\\\auth-forms\\\\AuthLogin.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // import { useSelector } from 'react-redux';\n\nimport { useEffect, useRef } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, Checkbox, Divider, FormControl, FormControlLabel, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Stack, Typography, useMediaQuery } from '@mui/material'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project imports\n// import useScriptRef from 'hooks/useScriptRef'\n\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // assets\n\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Google from \"assets/images/icons/social-google.svg\"; // ============================|| FIREBASE - LOGIN ||============================ //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FirebaseLogin = ({ ...others\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const scriptedRef = useRef(true);\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md')); //   const customization = useSelector((state) => state.customization)\n\n  const [checked, setChecked] = useState(true);\n\n  const googleHandler = async () => {\n    console.error('Login');\n  };\n\n  useEffect(() => () => {\n    scriptedRef.current = false;\n  }, []);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disableElevation: true,\n            fullWidth: true,\n            onClick: googleHandler,\n            size: \"large\",\n            variant: \"outlined\",\n            sx: {\n              color: 'grey.700',\n              backgroundColor: theme.palette.grey[50],\n              borderColor: theme.palette.grey[100]\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mr: {\n                  xs: 1,\n                  sm: 2,\n                  width: 20\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Google,\n                alt: \"google\",\n                width: 16,\n                height: 16,\n                style: {\n                  marginRight: matchDownSM ? 8 : 16\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), \"Sign in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              flexGrow: 1\n            },\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            sx: {\n              cursor: 'unset',\n              m: 2,\n              py: 0.5,\n              px: 7,\n              borderColor: `${theme.palette.grey[100]} !important`,\n              color: `${theme.palette.grey[900]}!important`,\n              fontWeight: 500,\n              borderRadius: `${12}px`\n            },\n            disableRipple: true,\n            disabled: true,\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              flexGrow: 1\n            },\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Sign in with Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: 'info@codedthemes.com',\n        password: '123456',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      }),\n      onSubmit: async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          if (scriptedRef.current) {\n            setStatus({\n              success: true\n            });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        }\n      },\n      children: ({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        ...others,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: Boolean(touched.email && errors.email),\n          sx: { ...theme.typography.customInput\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-email-login\",\n            children: \"Email Address / Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-email-login\",\n            type: \"email\",\n            value: values.email,\n            name: \"email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            label: \"Email Address / Username\",\n            inputProps: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-email-login\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: Boolean(touched.password && errors.password),\n          sx: { ...theme.typography.customInput\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-password-login\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-password-login\",\n            type: showPassword ? 'text' : 'password',\n            value: values.password,\n            name: \"password\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                size: \"large\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this),\n            label: \"Password\",\n            inputProps: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-password-login\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checked,\n              onChange: event => setChecked(event.target.checked),\n              name: \"checked\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"secondary\",\n            sx: {\n              textDecoration: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disableElevation: true,\n              disabled: isSubmitting,\n              fullWidth: true,\n              size: \"large\",\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"secondary\",\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FirebaseLogin, \"Q7BCN3xs3HDNqNGk7LNrSnUo00s=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = FirebaseLogin;\nexport default FirebaseLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseLogin\");","map":{"version":3,"sources":["C:/Users/usama/Desktop/TemplateDraft1/src/views/pages/authentication/auth-forms/AuthLogin.js"],"names":["useState","useEffect","useRef","useTheme","Box","Button","Checkbox","Divider","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Stack","Typography","useMediaQuery","Yup","Formik","AnimateButton","Visibility","VisibilityOff","FirebaseLogin","others","theme","scriptedRef","matchDownSM","breakpoints","down","checked","setChecked","googleHandler","console","error","current","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","color","backgroundColor","palette","grey","borderColor","mr","xs","sm","width","Google","marginRight","alignItems","display","flexGrow","cursor","m","py","px","fontWeight","borderRadius","mb","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","typography","customInput","target","textDecoration","mt"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n// import { useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react'\n// material-ui\nimport { useTheme } from '@mui/material/styles'\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Stack,\n  Typography,\n  useMediaQuery,\n} from '@mui/material'\n\n// third party\nimport * as Yup from 'yup'\nimport { Formik } from 'formik'\n\n// project imports\n// import useScriptRef from 'hooks/useScriptRef'\nimport AnimateButton from 'ui-component/extended/AnimateButton'\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility'\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'\n\nimport Google from 'assets/images/icons/social-google.svg'\n\n// ============================|| FIREBASE - LOGIN ||============================ //\n\nconst FirebaseLogin = ({ ...others }) => {\n  const theme = useTheme()\n  const scriptedRef = useRef(true)\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'))\n  //   const customization = useSelector((state) => state.customization)\n  const [checked, setChecked] = useState(true)\n\n  const googleHandler = async () => {\n    console.error('Login')\n  }\n  useEffect(\n    () => () => {\n      scriptedRef.current = false\n    },\n    []\n  )\n  const [showPassword, setShowPassword] = useState(false)\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault()\n  }\n\n  return (\n    <>\n      <Grid container direction='column' justifyContent='center' spacing={2}>\n        <Grid item xs={12}>\n          <AnimateButton>\n            <Button\n              disableElevation\n              fullWidth\n              onClick={googleHandler}\n              size='large'\n              variant='outlined'\n              sx={{\n                color: 'grey.700',\n                backgroundColor: theme.palette.grey[50],\n                borderColor: theme.palette.grey[100],\n              }}\n            >\n              <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                <img\n                  src={Google}\n                  alt='google'\n                  width={16}\n                  height={16}\n                  style={{ marginRight: matchDownSM ? 8 : 16 }}\n                />\n              </Box>\n              Sign in with Google\n            </Button>\n          </AnimateButton>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n            }}\n          >\n            <Divider sx={{ flexGrow: 1 }} orientation='horizontal' />\n\n            <Button\n              variant='outlined'\n              sx={{\n                cursor: 'unset',\n                m: 2,\n                py: 0.5,\n                px: 7,\n                borderColor: `${theme.palette.grey[100]} !important`,\n                color: `${theme.palette.grey[900]}!important`,\n                fontWeight: 500,\n                borderRadius: `${12}px`,\n              }}\n              disableRipple\n              disabled\n            >\n              OR\n            </Button>\n\n            <Divider sx={{ flexGrow: 1 }} orientation='horizontal' />\n          </Box>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          alignItems='center'\n          justifyContent='center'\n        >\n          <Box sx={{ mb: 2 }}>\n            <Typography variant='subtitle1'>\n              Sign in with Email address\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Formik\n        initialValues={{\n          email: 'info@codedthemes.com',\n          password: '123456',\n          submit: null,\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          password: Yup.string().max(255).required('Password is required'),\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            if (scriptedRef.current) {\n              setStatus({ success: true })\n              setSubmitting(false)\n            }\n          } catch (err) {\n            console.error(err)\n            if (scriptedRef.current) {\n              setStatus({ success: false })\n              setErrors({ submit: err.message })\n              setSubmitting(false)\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values,\n        }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.email && errors.email)}\n              sx={{ ...theme.typography.customInput }}\n            >\n              <InputLabel htmlFor='outlined-adornment-email-login'>\n                Email Address / Username\n              </InputLabel>\n              <OutlinedInput\n                id='outlined-adornment-email-login'\n                type='email'\n                value={values.email}\n                name='email'\n                onBlur={handleBlur}\n                onChange={handleChange}\n                label='Email Address / Username'\n                inputProps={{}}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText\n                  error\n                  id='standard-weight-helper-text-email-login'\n                >\n                  {errors.email}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              error={Boolean(touched.password && errors.password)}\n              sx={{ ...theme.typography.customInput }}\n            >\n              <InputLabel htmlFor='outlined-adornment-password-login'>\n                Password\n              </InputLabel>\n              <OutlinedInput\n                id='outlined-adornment-password-login'\n                type={showPassword ? 'text' : 'password'}\n                value={values.password}\n                name='password'\n                onBlur={handleBlur}\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge='end'\n                      size='large'\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label='Password'\n                inputProps={{}}\n              />\n              {touched.password && errors.password && (\n                <FormHelperText\n                  error\n                  id='standard-weight-helper-text-password-login'\n                >\n                  {errors.password}\n                </FormHelperText>\n              )}\n            </FormControl>\n            <Stack\n              direction='row'\n              alignItems='center'\n              justifyContent='space-between'\n              spacing={1}\n            >\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={checked}\n                    onChange={(event) => setChecked(event.target.checked)}\n                    name='checked'\n                    color='primary'\n                  />\n                }\n                label='Remember me'\n              />\n              <Typography\n                variant='subtitle1'\n                color='secondary'\n                sx={{ textDecoration: 'none', cursor: 'pointer' }}\n              >\n                Forgot Password?\n              </Typography>\n            </Stack>\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n                <Button\n                  disableElevation\n                  disabled={isSubmitting}\n                  fullWidth\n                  size='large'\n                  type='submit'\n                  variant='contained'\n                  color='secondary'\n                >\n                  Sign in\n                </Button>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  )\n}\n\nexport default FirebaseLogin\n"]},"metadata":{},"sourceType":"module"}